/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestReplica, TestReplicaInterface } from "../TestReplica";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_localDomain",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[2]",
        name: "newRoot",
        type: "bytes32[2]",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature2",
        type: "bytes",
      },
    ],
    name: "DoubleUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "homeDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Update",
    type: "event",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "acceptableRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "committedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "confirmAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[2]",
        name: "_newRoot",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature2",
        type: "bytes",
      },
    ],
    name: "doubleUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "homeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_committedRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_optimisticSeconds",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Replica.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticSeconds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "process",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "prove",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remoteDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
    ],
    name: "setCommittedRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setFailed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "setMessagePending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_remoteDomain",
        type: "uint32",
      },
    ],
    name: "setRemoteDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updater",
        type: "address",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Common.States",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "testBranchRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testHomeDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testProcess",
    outputs: [
      {
        internalType: "bool",
        name: "_success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_oldRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updater",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051612d5a380380612d5a8339818101604052606081101561003357600080fd5b50516001600160e01b031960e082901b16608052620cf85060a0819052613a9860c081905263ffffffff90921691612cc261009860003980610ad75280610fbe525080610f9d52806110955280611785525080610d355280610d6d5250612cc26000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063961681dc116100f9578063b61c19e811610097578063d88beda211610071578063d88beda2146107b8578063df034cd0146107c0578063e7e7a7b7146107f1578063ffa1ad741461083c576101c4565b8063b61c19e814610702578063b80777ea146107a8578063c19d93fb146107b0576101c4565b80639d54f419116100d35780639d54f419146105e3578063a33a311314610616578063a3f81d6814610633578063b31c01fb14610650576101c4565b8063961681dc1461050b57806396ae1a89146105135780639868a273146105b9576101c4565b80635146366e1161016657806367a6771d1161014057806367a6771d1461041f57806371bfb7b8146104275780638d3638f414610444578063928bc4b214610465576101c4565b80635146366e1461034657806351d7bcd71461034e5780636188af0e14610371576101c4565b80632bbd59ca116101a25780632bbd59ca146102ba578063371d3071146102f8578063399926681461033657806345630b1a1461033e576101c4565b8063146901db146101c957806319d9d21a146101d357806325e3beda146102a0575b600080fd5b6101d161085a565b005b6101d1600480360360a08110156101e957600080fd5b813591602081019181019060808101606082013564010000000081111561020f57600080fd5b82018360208201111561022157600080fd5b8035906020019184600183028401116401000000008311171561024357600080fd5b91939092909160208101903564010000000081111561026157600080fd5b82018360208201111561027357600080fd5b8035906020019184600183028401116401000000008311171561029557600080fd5b509092509050610864565b6102a8610ad5565b60408051918252519081900360200190f35b6102d7600480360360208110156102d057600080fd5b5035610af9565b604051808260028111156102e757fe5b815260200191505060405180910390f35b610322600480360361044081101561030f57600080fd5b5080359060208101906104200135610b0e565b604080519115158252519081900360200190f35b6102a8610c2e565b6102a8610c34565b6102a8610c4e565b6101d16004803603602081101561036457600080fd5b503563ffffffff16610c58565b6101d1600480360361044081101561038857600080fd5b8101906020810181356401000000008111156103a357600080fd5b8201836020820111156103b557600080fd5b803590602001918460018302840111640100000000831117156103d757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955092935050506104008201359050610c8f565b6102a8610d1b565b6102a86004803603602081101561043d57600080fd5b5035610d21565b61044c610d33565b6040805163ffffffff9092168252519081900360200190f35b6103226004803603602081101561047b57600080fd5b81019060208101813564010000000081111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111640100000000831117156104ca57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d57945050505050565b61044c61139a565b6103226004803603602081101561052957600080fd5b81019060208101813564010000000081111561054457600080fd5b82018360208201111561055657600080fd5b8035906020019184600183028401116401000000008311171561057857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506113a6945050505050565b6102a860048036036104408110156105d057600080fd5b50803590602081019061042001356113b7565b6101d1600480360360208110156105f957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166113f5565b6101d16004803603602081101561062c57600080fd5b5035611442565b6103226004803603602081101561064957600080fd5b5035611459565b6101d16004803603606081101561066657600080fd5b81359160208101359181019060608101604082013564010000000081111561068d57600080fd5b82018360208201111561069f57600080fd5b803590602001918460018302840111640100000000831117156106c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611482945050505050565b6101d16004803603602081101561071857600080fd5b81019060208101813564010000000081111561073357600080fd5b82018360208201111561074557600080fd5b8035906020019184600183028401116401000000008311171561076757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506116d2945050505050565b6102a861175c565b6102d7611760565b6102a8611783565b6107c86117a7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101d16004803603608081101561080757600080fd5b5063ffffffff8135169073ffffffffffffffffffffffffffffffffffffffff60208201351690604081013590606001356117c9565b610844611960565b6040805160ff9092168252519081900360200190f35b610862611965565b565b6002600054760100000000000000000000000000000000000000000000900460ff16600281111561089157fe5b14156108fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b604080516020601f860181900481028201810190925284815261094091889188359188908890819084018382808284376000920191909152506119a892505050565b801561098f575061098f86866001602002013584848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119a892505050565b80156109a057508435602086013514155b80156109b257506109b086611a40565b155b15610acd576109bf61085a565b7f2c3f60bab4170347826231b75a920b5053941ddebc6eed6fd2c25721648b186f8686868686866040518087815260200186600260200280828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910182810360409081018252810186905290506020810160608201878780828437600083820152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690910184810383528581526020019050858580828437600083820152604051601f9091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092018290039a509098505050505050505050a15b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60356020526000908152604090205460ff1681565b60008060008581526035602052604090205460ff166002811115610b2e57fe5b14610b9a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f214d6573736167655374617475732e4e6f6e6500000000000000000000000000604482015290519081900360640190fd5b6000610bd0858560208060200260405190810160405280929190826020800280828437600092019190915250879150611a659050565b9050610bdb81611459565b15610c21575050600083815260356020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001908117909155610c27565b60009150505b9392505050565b60325481565b603154600090610c499063ffffffff16611b10565b905090565b6000610c49610c34565b603180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff92909216919091179055565b610ca183805190602001208383610b0e565b610d0c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2170726f76650000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b610d1583610d57565b50505050565b60015481565b60346020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610d648382611b85565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610db87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611ba9565b63ffffffff1614610e2a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2164657374696e6174696f6e0000000000000000000000000000000000000000604482015290519081900360640190fd5b6000610e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316611bda565b9050600160008281526035602052604090205460ff166002811115610e7857fe5b14610ee457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2170726f76656e00000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60335460ff16600114610f5857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f217265656e7472616e7400000000000000000000000000000000000000000000604482015290519081900360640190fd5b603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009081169091556000828152603560205260409020805490911660021790557f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000015a101561104e57604080517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048083019190915260248201527f2167617300000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600061107b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008416611c19565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006110f47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008916611c2c565b61111f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008a16611c5c565b61117461114d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008c16611c8d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016611cfe565b604051602401808463ffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111c65781810151838201526020016111ae565b50505050905090810190601f1680156111f35780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f56d5d4750000000000000000000000000000000000000000000000000000000017815281519197506000965086955090935091508390508a88f198503d945083851115611292578394505b848252846000602084013e816040518082805190602001908083835b602083106112eb57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016112ae565b5181516020939093036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0180199091169216919091179052604051920182900382209350508b1515915089907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890600090a45050603380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905550949695505050505050565b60315463ffffffff1681565b60006113b182610d57565b92915050565b60006113ed848460208060200260405190810160405280929190826020800280828437600092019190915250869150611a659050565b949350505050565b6000805473ffffffffffffffffffffffffffffffffffffffff90921662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091179055565b600181815560009182526034602052604090912055565b6000818152603460205260408120548061147757600091505061147d565b42101590505b919050565b6002600054760100000000000000000000000000000000000000000000900460ff1660028111156114af57fe5b141561151c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6661696c65642073746174650000000000000000000000000000000000000000604482015290519081900360640190fd5b600154831461158c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742063757272656e74207570646174650000000000000000000000000000604482015290519081900360640190fd5b6115978383836119a8565b61160257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f2175706461746572207369670000000000000000000000000000000000000000604482015290519081900360640190fd5b61160a610862565b6032546000838152603460209081526040808320429094019093556001859055603154835182815285518184015285518795899563ffffffff909416947f608828ad904a0c9250c09004ba7226efb08f35a5c815bb3f76b5a8a271cd08b29489949384938401928601918190849084905b8381101561169357818101518382015260200161167b565b50505050905090810190601f1680156116c05780820380516001836020036101000a031916815260200191505b509250505060405180910390a4505050565b60006116de8282611b85565b90506001603560006117117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008516611bda565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600183600281111561175357fe5b02179055505050565b4290565b600054760100000000000000000000000000000000000000000000900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005462010000900473ffffffffffffffffffffffffffffffffffffffff1681565b600054610100900460ff16806117e257506117e2611d42565b806117f0575060005460ff16155b611845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612b7b602e913960400191505060405180910390fd5b600054610100900460ff161580156118ab57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b6118b484611d53565b6033805460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091168117909155603180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff88161790558381556000848152603460205260409020556032829055801561195957600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050505050565b600081565b600080547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16760200000000000000000000000000000000000000000000179055565b6000806119b3610c34565b85856040516020018084815260200183815260200182815260200193505050506040516020818303038152906040528051906020012090506119f481611ee8565b60005490915062010000900473ffffffffffffffffffffffffffffffffffffffff16611a208285611f39565b73ffffffffffffffffffffffffffffffffffffffff161495945050505050565b7fde6e3d4540f861d08dfe4ac16334792de2fb44aa7bcd5b657238410791c67a811490565b8260005b6020811015611b0857600183821c166000858360208110611a8657fe5b602002015190508160011415611acc5780846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209350611afe565b838160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012093505b5050600101611a69565b509392505050565b6040805160e09290921b7fffffffff00000000000000000000000000000000000000000000000000000000166020808401919091527f4f5054494353000000000000000000000000000000000000000000000000000060248401528151808403600a018152602a909301909152815191012090565b815160009060208401611ba064ffffffffff85168284611fd3565b95945050505050565b60006113b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000831660286004612029565b600080611be68361204a565b6bffffffffffffffffffffffff1690506000611c018461205e565b6bffffffffffffffffffffffff169091209392505050565b60006113b1611c2783612072565b6120a3565b60006113b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316826004612029565b60006113b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316600460206120a6565b60006113b1604c80611cc07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861661205e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000861692916bffffffffffffffffffffffff91909116036000612251565b6060600080611d0c8461205e565b6bffffffffffffffffffffffff1690506040519150819250611d3184836020016122d7565b508181016020016040529052919050565b6000611d4d30612403565b15905090565b600054610100900460ff1680611d6c5750611d6c611d42565b80611d7a575060005460ff16155b611dcf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612b7b602e913960400191505060405180910390fd5b600054610100900460ff16158015611e3557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166201000073ffffffffffffffffffffffffffffffffffffffff851602177fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff167601000000000000000000000000000000000000000000001790558015611ee457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b60008151604114611fab57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a611fc986828585612409565b9695505050505050565b600080611fe084846125f7565b9050604051811115611ff0575060005b8061201e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000915050610c27565b611ba0858585612669565b60008160200360080260ff166120408585856120a6565b901c949350505050565b60781c6bffffffffffffffffffffffff1690565b60181c6bffffffffffffffffffffffff1690565b60006113b17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000008316602c60206120a6565b90565b600060ff82166120b857506000610c27565b6120c18461205e565b6bffffffffffffffffffffffff166120dc8460ff85166125f7565b11156121bb5761211d6120ee8561204a565b6bffffffffffffffffffffffff166121058661205e565b6bffffffffffffffffffffffff16858560ff1661267c565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612180578181015183820152602001612168565b50505050905090810190601f1680156121ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60208260ff161115612218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180612bcb603a913960400191505060405180910390fd5b6008820260006122278661204a565b6bffffffffffffffffffffffff1690506000612242836127d7565b91909501511695945050505050565b60008061225d8661204a565b6bffffffffffffffffffffffff16905061227686612820565b61228a8561228484896125f7565b906125f7565b11156122b9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009150506113ed565b6122c381866125f7565b9050611fc98364ffffffffff168286611fd3565b60006122e28361284a565b612337576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612c056028913960400191505060405180910390fd5b6123408361285c565b612395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180612c2d602b913960400191505060405180910390fd5b60006123a08461205e565b6bffffffffffffffffffffffff16905060006123bb8561204a565b6bffffffffffffffffffffffff16905060006040519050848111156123e05760206060fd5b8285848460045afa50611fc96123f587612899565b64ffffffffff168685612669565b3b151590565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115612484576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612b386022913960400191505060405180910390fd5b8360ff16601b148061249957508360ff16601c145b6124ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ba96022913960400191505060405180910390fd5b600060018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561254a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611ba057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b818101828110156113b157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f766572666c6f7720647572696e67206164646974696f6e2e00000000000000604482015290519081900360640190fd5b606092831b9190911790911b1760181b90565b606060006126898661289f565b91505060006126978661289f565b91505060006126a58661289f565b91505060006126b38661289f565b915050838383836040516020018080612c58603591397fffffffffffff000000000000000000000000000000000000000000000000000060d087811b821660358401527f2077697468206c656e6774682030780000000000000000000000000000000000603b84015286901b16604a8201526050016021612b5a82397fffffffffffff000000000000000000000000000000000000000000000000000060d094851b811660218301527f2077697468206c656e677468203078000000000000000000000000000000000060278301529290931b9091166036830152507f2e00000000000000000000000000000000000000000000000000000000000000603c82015260408051601d818403018152603d90920190529b9a5050505050505050505050565b7f80000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091011d90565b600061282b8261205e565b6128348361204a565b016bffffffffffffffffffffffff169050919050565b600061285582612973565b1592915050565b600061286782612899565b64ffffffffff1664ffffffffff14156128825750600061147d565b600061288d83612820565b60405110199392505050565b60d81c90565b600080601f5b600f8160ff1611156129075760ff600882021684901c6128c48161299b565b61ffff16841793508160ff166010146128df57601084901b93505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016128a5565b50600f5b60ff8160ff16101561296d5760ff600882021684901c61292a8161299b565b61ffff16831792508160ff1660001461294557601083901b92505b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0161290b565b50915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000009081161490565b60006129ad60048360ff16901c6129cb565b60ff161760081b62ffff00166129c2826129cb565b60ff1617919050565b600060f08083179060ff821614156129e757603091505061147d565b8060ff1660f114156129fd57603191505061147d565b8060ff1660f21415612a1357603291505061147d565b8060ff1660f31415612a2957603391505061147d565b8060ff1660f41415612a3f57603491505061147d565b8060ff1660f51415612a5557603591505061147d565b8060ff1660f61415612a6b57603691505061147d565b8060ff1660f71415612a8157603791505061147d565b8060ff1660f81415612a9757603891505061147d565b8060ff1660f91415612aad57603991505061147d565b8060ff1660fa1415612ac357606191505061147d565b8060ff1660fb1415612ad957606291505061147d565b8060ff1660fc1415612aef57606391505061147d565b8060ff1660fd1415612b0557606491505061147d565b8060ff1660fe1415612b1b57606591505061147d565b8060ff1660ff1415612b3157606691505061147d565b5091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75652e20417474656d7074656420746f20696e646578206174206f6666736574203078496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c756554797065644d656d566965772f696e646578202d20417474656d7074656420746f20696e646578206d6f7265207468616e20333220627974657354797065644d656d566965772f636f7079546f202d204e756c6c20706f696e74657220646572656654797065644d656d566965772f636f7079546f202d20496e76616c696420706f696e74657220646572656654797065644d656d566965772f696e646578202d204f76657272616e2074686520766965772e20536c696365206973206174203078a26469706673582212202c6dd278005bb35c2a15c5eaa6efcd54c7d8145f02e0f90766b4266b479b845064736f6c63430007060033";

export class TestReplica__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestReplica> {
    return super.deploy(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    ) as Promise<TestReplica>;
  }
  getDeployTransaction(
    _localDomain: BigNumberish,
    arg1: BigNumberish,
    arg2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _localDomain,
      arg1,
      arg2,
      overrides || {}
    );
  }
  attach(address: string): TestReplica {
    return super.attach(address) as TestReplica;
  }
  connect(signer: Signer): TestReplica__factory {
    return super.connect(signer) as TestReplica__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestReplicaInterface {
    return new utils.Interface(_abi) as TestReplicaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestReplica {
    return new Contract(address, _abi, signerOrProvider) as TestReplica;
  }
}
